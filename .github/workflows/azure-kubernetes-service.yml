name: Build and deploy v2train-be-microservice to AKS

on:
  push:
    branches: ["main"]
  workflow_dispatch:

env:
  CONTAINER_REGISTRY: ${{ secrets.CONTAINER_REGISTRY }}
  CONTAINER_NAME: "backend-api"
  RESOURCE_GROUP: ${{ secrets.RESOURCE_GROUP }}
  CLUSTER_NAME: ${{ secrets.CLUSTER_NAME }}
  DEPLOYMENT_MANIFEST_PATH: "./k8s"

jobs:
  buildImage:
    permissions:
      contents: read
      id-token: write
    runs-on: ubuntu-latest
    steps:
      # Checks out the repository this file is in
      - uses: actions/checkout@v4

      # Set up Node.js environment
      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'  # or '16', '20', 'lts/*', etc.
          cache: 'npm'        # This caches npm dependencies for faster builds

      # Install Node.js dependencies
      - name: Install dependencies
        run: npm ci  # Use 'npm ci' instead of 'npm install' for CI/CD
      

      # Logs in with your Azure credentials
      - name: Azure login
        id: azure-login
        continue-on-error: true
        uses: azure/login@v1.4.6
        with:
          client-id: ${{ secrets.CLIENT_ID }}
          tenant-id: ${{ secrets.TENANT_ID }}
          subscription-id: ${{ secrets.SUBSCRIPTION_ID }}      

      # Builds and pushes an image up to your Azure Container Registry
      - name: Build and push image to ACR
        run: |
          az acr build --image ${{ env.CONTAINER_NAME }}:${{ github.sha }} --registry ${{ secrets.CONTAINER_REGISTRY }} -g ${{ secrets.RESOURCE_GROUP }} .

  deploy:
    permissions:
      actions: read
      contents: read
      id-token: write
    runs-on: ubuntu-latest
    needs: [buildImage]
    steps:
      # Checks out the repository this file is in
      - uses: actions/checkout@v4

      # Logs in with your Azure credentials
      - name: Azure login
        uses: azure/login@v1.4.6
        with:
          client-id: ${{ secrets.CLIENT_ID }}
          tenant-id: ${{ secrets.TENANT_ID }}
          subscription-id: ${{ secrets.SUBSCRIPTION_ID }}

      # Use kubelogin to configure your kubeconfig for Azure auth
      - name: Set up kubelogin for non-interactive login
        uses: azure/use-kubelogin@v1
        with:
          kubelogin-version: 'v0.0.25'

      # Retrieves your Azure Kubernetes Service cluster's kubeconfig file
      - name: Get K8s context
        uses: azure/aks-set-context@v3
        with:
          resource-group: ${{ env.RESOURCE_GROUP }}
          cluster-name: ${{ env.CLUSTER_NAME }}
          admin: 'false'
          use-kubelogin: 'true'

      - name: Substitute environment variables in manifests
        env:
          CONTAINER_REGISTRY: ${{ secrets.CONTAINER_REGISTRY }}
          IMAGE_TAG: ${{ github.sha }}
        run: |
          for file in k8s/*.yaml; do
            envsubst < "$file" > "${file}.tmp" && mv "${file}.tmp" "$file"
          done

      # Deploy namespace first
      - name: Create namespace
        uses: Azure/k8s-deploy@v4
        with:
          action: deploy
          manifests: k8s/namespace.yaml    

      - name: Ensure NGINX Ingress Controller is installed
        run: |
          echo "Applying NGINX Ingress Controller configuration..."
          kubectl apply -f https://raw.githubusercontent.com/kubernetes/ingress-nginx/controller-v1.8.1/deploy/static/provider/cloud/deploy.yaml
          echo "Waiting for ingress controller to be ready..."
          kubectl wait --namespace ingress-nginx \
            --for=condition=ready pod \
            --selector=app.kubernetes.io/component=controller \
            --timeout=300s

      # Deploys application based on given manifest file
      - name: Deploys application        
        uses: Azure/k8s-deploy@v4
        with:
          action: deploy
          manifests: |
            k8s/configmap.yaml
            k8s/backend-deployment.yaml
            k8s/backend-service.yaml
            k8s/hpa.yaml
          namespace: 'microservice-demo'
          images: |
            ${{ env.CONTAINER_REGISTRY }}.azurecr.io/${{ env.CONTAINER_NAME }}:${{ github.sha }}
